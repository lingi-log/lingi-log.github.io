(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{198:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring-boot-annotation-정리"}},[t._v("Spring Boot Annotation 정리")]),t._v(" "),a("h2",{attrs:{id:"bean"}},[t._v("Bean")]),t._v(" "),a("ul",[a("li",[t._v("@Bean\n"),a("ul",[a("li",[t._v("빈 객체를 참조할 때 사용")]),t._v(" "),a("li",[t._v("객체를 생성하고 알맞게 생성해야 한다.")]),t._v(" "),a("li",[t._v("개발자가 컨트롤 하기 불가능한 외부 라이브러리 들을 Bean 으로 등록하고 싶은 경우에 사용\n"),a("ul",[a("li",[t._v("예를 들어 ObjectMapper 의 경우 ObjectMapper 클래스에 @Component를 선언할 순 없으니 ObjectMapper의 인스턴스를 생성하는 매서드를 만들고, 해당 메소드에 @Bean을 선언하여 Bean으로 등록한다.")])])]),t._v(" "),a("li",[t._v("bean?\n"),a("ul",[a("li",[t._v("스프링 IOC 컨테이너가 관리하는 객체.")])])])])])]),t._v(" "),a("h2",{attrs:{id:"controller-restcontroller"}},[t._v("Controller, RestController")]),t._v(" "),a("ul",[a("li",[t._v("@Controller\n"),a("ul",[a("li",[t._v("스프링 MVC 에서 컨트롤러로 사용한다.")])])]),t._v(" "),a("li",[t._v("@RestController\n"),a("ul",[a("li",[t._v("@Controller, @ResponseBody 을 합쳐놓은 어노테이션."),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/url"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectMyInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Controller")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/url"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ResponseBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectMyInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("위 두 코드는 동일한 동작을 한다.\n"),a("img",{attrs:{src:"/spring_%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D_1.png",alt:"ㅁ"}})]),t._v(" "),a("li",[t._v("위 그림에서 알 수 있듯이, Spring은 요청이 오면 view resolver를 통해 사용자에게 text/html 응답을 보내주게 된다.\n"),a("img",{attrs:{src:"/spring_%EB%8F%99%EC%9E%91%EB%B0%A9%EC%8B%9D_2.png",alt:"ㅁ"}})]),t._v(" "),a("li",[t._v("그에 반해 RestController에서 return되는 값은 위 그림애서 처럼 HttpResponsebody에 직접 쓰여지게 된다.")])])])]),t._v(" "),a("h3",{attrs:{id:"차이점"}},[t._v("차이점?")]),t._v(" "),a("ul",[a("li",[t._v("@Controller는 View페이지를 반환하지만, @RestController는 객체를 반환하고, 그 객체는 application/json 형식의 HttpResponseBody에 직접 작성된다.")])]),t._v(" "),a("h2",{attrs:{id:"springbootapplication"}},[t._v("SpringBootApplication")]),t._v(" "),a("ul",[a("li",[t._v("@SpringBootApplication\n"),a("ul",[a("li",[t._v("@EnableAutoConfiguration")]),t._v(" "),a("li",[t._v("@ComponentScan")]),t._v(" "),a("li",[t._v("@Configuration")]),t._v(" "),a("li",[t._v("위 세개의 어노테이션을 포함한다.")])])])]),t._v(" "),a("h2",{attrs:{id:"requestmapping-getmapping-postmapping"}},[t._v("RequestMapping, GetMapping, PostMapping")]),t._v(" "),a("ul",[a("li",[t._v("@RequestMapping")]),t._v(" "),a("li",[t._v("PostMapping")]),t._v(" "),a("li",[t._v("@GetMapping")])]),t._v(" "),a("h3",{attrs:{id:"사용-예"}},[t._v("사용 예")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{type}/aliveCheck"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("aliveCheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{type}/log-tail"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PathVariable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" filePointer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"service-repository-component"}},[t._v("Service, Repository, Component")]),t._v(" "),a("p",[t._v("https://www.baeldung.com/spring-component-repository-service")]),t._v(" "),a("h3",{attrs:{id:"다른-점"}},[t._v("다른 점?")]),t._v(" "),a("p",[t._v("The major difference between these stereotypes is they are used for different classification. When we annotate a class for auto-detection, then we should use the respective stereotype.")]),t._v(" "),a("ul",[a("li",[t._v("@Component\n"),a("ul",[a("li",[t._v("@Service, @Repository 용도 외에 Bean으로 등록하고 싶은 것에 사용")])])]),t._v(" "),a("li",[t._v("@Repository\n"),a("ul",[a("li",[t._v("persistence specific exceptions를 캐치하고, 그것을 Spring의 unified unchecked exception으로 rethrow 하는 일을 함.")])])]),t._v(" "),a("li",[t._v("@Service\n"),a("ul",[a("li",[t._v("Business Logic이 구현되어 있다는 것을 의미함.Layer에서 Service를 명시하기 위해 사용")])])])]),t._v(" "),a("h2",{attrs:{id:"autowired-resource"}},[t._v("Autowired, Resource")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("-")]),t._v(" "),a("th",[t._v("@Autowired")]),t._v(" "),a("th",[t._v("@Inject")]),t._v(" "),a("th",[t._v("@Resource")])])]),t._v(" "),a("tbody",[a("tr",[a("td"),t._v(" "),a("td",[t._v("스프링 전용")]),t._v(" "),a("td",[t._v("자바에서 지원")]),t._v(" "),a("td",[t._v("자바에서 지원")])]),t._v(" "),a("tr",[a("td",[t._v("연결방식")]),t._v(" "),a("td",[t._v("타입에 맞춰 연결")]),t._v(" "),a("td",[t._v("타입에 맞춰 연결")]),t._v(" "),a("td",[t._v("이름으로 연결")])]),t._v(" "),a("tr",[a("td",[t._v("연결방식2")]),t._v(" "),a("td",[t._v("@Autowired @Qualifier('이름')")]),t._v(" "),a("td",[t._v("@Inject @Qualifier('이름')")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"autowired"}},[t._v("@Autowired")]),t._v(" "),a("ul",[a("li",[t._v("객체를 자동으로 주입하는 어노테이션")]),t._v(" "),a("li",[t._v("어떤 빈을 주입할 지 선택지가 명확하니 컨테이너가 아라서 resolve 해달라는 의미/")])]),t._v(" "),a("ol",[a("li",[t._v("해당 타입의 빈 객체가 존재하지 않는 경우 예외 처리\n"),a("ul",[a("li",[t._v("@Autowired(required=false)")]),t._v(" "),a("li",[t._v("기본 : @Autowired(required=true)")])])]),t._v(" "),a("li",[t._v("동일한 타입의 빈 객체가 두 개 이상 존재하는 경우 예외 처리\n"),a("ul",[a("li",[t._v('@Qualifier("설정파일에서 지정한 값")으로 지정')])])])]),t._v(" "),a("h4",{attrs:{id:"사용법"}},[t._v("사용법")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("필드 주입")])]),t._v(" "),a("li",[a("p",[t._v("setter")])]),t._v(" "),a("li",[a("p",[t._v("생성자")]),t._v(" "),a("ul",[a("li",[t._v("순환 참조에 의한 stack overflow 방지 가능")]),t._v(" "),a("li",[t._v("null pointer exception 방지 가능(setter 사용하는 경우, set 되기 전, 객체를 사용하면 null pointer exception 발생 가능.)")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 인젝션 할 필드가 한개 라면 생략 가능.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyController")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyService")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v('@Resource(name="swMonitoringService") private SwMonitoringService service;')])])]),t._v(" "),a("h2",{attrs:{id:"configuration"}},[t._v("Configuration")]),t._v(" "),a("ul",[a("li",[t._v("@Configuration\n"),a("ul",[a("li",[t._v("스프링 설정 클래스로 지정한다.")])])])]),t._v(" "),a("h2",{attrs:{id:"propertysource"}},[t._v("PropertySource")]),t._v(" "),a("ul",[a("li",[t._v('@PropertySource(value = "classpath:common.properties")')])]),t._v(" "),a("h2",{attrs:{id:"enablewebsecurity"}},[t._v("EnableWebSecurity")]),t._v(" "),a("ul",[a("li",[t._v("@EnableWebSecurity\n"),a("ul",[a("li",[t._v("WebSecurityConfigureAdapter는 Spring Security 기능을 사용할 때 함께 사용한다.")])])])])])},[],!1,null,null,null);s.default=e.exports}}]);