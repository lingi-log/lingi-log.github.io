(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{285:function(t,v,_){"use strict";_.r(v);var d=_(0),e=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"표준-함수형-인터페이스를-사용하라"}},[t._v("표준 함수형 인터페이스를 사용하라")]),t._v(" "),_("ul",[_("li",[t._v("필요한 용도에 밎는 게 있다면 , 직접 구현하지 말고 표준 함수형 인터페이스를 사용하라")]),t._v(" "),_("li",[t._v("기본 함수형 인터페이스에 박싱된 기본 타입을 넣어 사용하지 말자\n"),_("ul",[_("li",[t._v("표준 함수형 인터페이스 대부분 기본 타입만 지원함.")]),t._v(" "),_("li",[t._v("계산량 많을 때 성능이 처참히 느려질 수 있다.")])])]),t._v(" "),_("li",[t._v("직접 만든 함수형 인터페이스에는 항상 "),_("code",[t._v("@FunctionalInterface")]),t._v("애너테이션을 사용하라")])]),t._v(" "),_("h2",{attrs:{id:"함수형-인터페이스"}},[t._v("함수형 인터페이스")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("함수형 인터페이스")]),t._v(" "),_("th",[t._v("함수 시그니처")]),t._v(" "),_("th",[t._v("설명")]),t._v(" "),_("th",[t._v("예")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("java.lang.Runnerble")]),t._v(" "),_("td",[t._v("void run()")]),t._v(" "),_("td",[t._v("매개변수도 없고 반환값도 없음")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("Supplier<T>")]),t._v(" "),_("td",[t._v("T get()")]),t._v(" "),_("td",[t._v("매개변수는 없고 반환값만 있음")]),t._v(" "),_("td",[t._v("Instant::now")])]),t._v(" "),_("tr",[_("td",[t._v("Consumer<T>")]),t._v(" "),_("td",[t._v("void accept(T t)")]),t._v(" "),_("td",[t._v("Supplier와 반대로 매개변수만 있고, 반환값이 없음")]),t._v(" "),_("td",[t._v("System.out::println")])]),t._v(" "),_("tr",[_("td",[t._v("Function<T, R>")]),t._v(" "),_("td",[t._v("R apply(T t)")]),t._v(" "),_("td",[t._v("일반적인 함수. 하나의 매개변수를 받아서 결과를 반환")]),t._v(" "),_("td",[t._v("Arrays::asList")])]),t._v(" "),_("tr",[_("td",[t._v("Predicate<T>")]),t._v(" "),_("td",[t._v("booean test(T t)")]),t._v(" "),_("td",[t._v("조건식을 표현하는데 사용됨. 매개변수는 하나, 반환 타입은 boolean")]),t._v(" "),_("td",[t._v("Colection:isEmpty")])]),t._v(" "),_("tr",[_("td",[t._v("BiConsumer<T, U>")]),t._v(" "),_("td",[t._v("void accept(T t, U u)")]),t._v(" "),_("td",[t._v("두개의 매개변수만 있고, 반환값이 없음")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("BiPredicate<T, U>")]),t._v(" "),_("td",[t._v("boolean test(T t, U u)")]),t._v(" "),_("td",[t._v("조건식을 표현하는데 사용됨. 매개변수는 둘, 반환겂은 boolean")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("BiFunction<T, U, R>")]),t._v(" "),_("td",[t._v("R apply(T t, U u)")]),t._v(" "),_("td",[t._v("두 개의 매개변수를 받아서 하나의 결과를 반환")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("UnaryOperator<T>")]),t._v(" "),_("td",[t._v("T apply(T t)")]),t._v(" "),_("td",[t._v("Function의 자손, Function과 달리 매개변수와 결과의 타입이 같다.")]),t._v(" "),_("td",[t._v("String::toLowerCase")])]),t._v(" "),_("tr",[_("td",[t._v("BinaryOperator<T>")]),t._v(" "),_("td",[t._v("T apply(T t, T t)")]),t._v(" "),_("td",[t._v("BiFunction의 자손, BiFunction과 달리 매개변수와 결과의 타입이 같다.")]),t._v(" "),_("td",[t._v("BigInteger::add")])])])]),t._v(" "),_("h2",{attrs:{id:"collection-framework과-함수형-인터페이스"}},[t._v("Collection Framework과 함수형 인터페이스")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("인터페이스")]),t._v(" "),_("th",[t._v("메서드")]),t._v(" "),_("th",[t._v("설명")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Collection")]),t._v(" "),_("td",[t._v("boolean removeIf(Predicate<E> filter)")]),t._v(" "),_("td",[t._v("조건에 맞는 요소를 삭제")])]),t._v(" "),_("tr",[_("td",[t._v("List")]),t._v(" "),_("td",[t._v("void replaceAll(UnaryOperator<E> operator)")]),t._v(" "),_("td",[t._v("모든 요소를 변환하여 대체")])]),t._v(" "),_("tr",[_("td",[t._v("Iterable")]),t._v(" "),_("td",[t._v("void forEach(Consumer<T>  action)")]),t._v(" "),_("td",[t._v("모든 요소에 작업 action을 수행")])]),t._v(" "),_("tr",[_("td",[t._v("Map")]),t._v(" "),_("td",[t._v("V compute(K key, BiFunction<K,V,V> f)")]),t._v(" "),_("td",[t._v("지정된 키의 값에 작업 f를 수행")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("V computeIfAbsent(K key, Function<K, V> f)")]),t._v(" "),_("td",[t._v("키가 없으면, 작업 f 수행 후 추가")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("V computeIfPresent(K key, BiFunction<K, V, V> f)")]),t._v(" "),_("td",[t._v("지정된 키가 있을 때, 작업 f 수행")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("V merge(K key, V value, BiFunction<V, V, V> f f)")]),t._v(" "),_("td",[t._v("모든 요소에 병합작업 f를 수행")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("void forEach(BiConsumer<K, V> action)")]),t._v(" "),_("td",[t._v("모든 요소에 작업 action을 수행")])]),t._v(" "),_("tr",[_("td"),t._v(" "),_("td",[t._v("void replaceAll(BiFunction<K, V, V> f)")]),t._v(" "),_("td",[t._v("모든 요소에 치환작업 f 를 수행")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);