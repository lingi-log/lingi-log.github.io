(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{276:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"로-타입은-사용-하지-말라"}},[t._v("로 타입은 사용 하지 말라")]),t._v(" "),a("p",[t._v("들어가기 앞서 여기서 사용 하는 용어를 정리하자.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("한글용어")]),t._v(" "),a("th",[t._v("영문용어")]),t._v(" "),a("th",[t._v("예")]),t._v(" "),a("th",[t._v("아이템")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("매개변수화 타입")]),t._v(" "),a("td",[t._v("parameterized type")]),t._v(" "),a("td",[t._v("List<String>")]),t._v(" "),a("td",[t._v("아이템26")])]),t._v(" "),a("tr",[a("td",[t._v("실제 타입 매개변수")]),t._v(" "),a("td",[t._v("actual type parameter")]),t._v(" "),a("td",[t._v("String")]),t._v(" "),a("td",[t._v("아이템26")])]),t._v(" "),a("tr",[a("td",[t._v("제네릭 타입")]),t._v(" "),a("td",[t._v("generic type")]),t._v(" "),a("td",[t._v("List<E>")]),t._v(" "),a("td",[t._v("아이템 26, 29")])]),t._v(" "),a("tr",[a("td",[t._v("정규 타입 매개변수")]),t._v(" "),a("td",[t._v("formal type parameter")]),t._v(" "),a("td",[t._v("E")]),t._v(" "),a("td",[t._v("아이템 26")])]),t._v(" "),a("tr",[a("td",[t._v("비한정적 와일드카드 타입")]),t._v(" "),a("td",[t._v("unbounded wildcard typ")]),t._v(" "),a("td",[t._v("List<?>")]),t._v(" "),a("td",[t._v("아이템26")])]),t._v(" "),a("tr",[a("td",[t._v("로 타입")]),t._v(" "),a("td",[t._v("raw type")]),t._v(" "),a("td",[t._v("List")]),t._v(" "),a("td",[t._v("아이템 26")])]),t._v(" "),a("tr",[a("td",[t._v("한정적 타입 매개변수")]),t._v(" "),a("td",[t._v("bounded type parameter")]),t._v(" "),a("td",[t._v("<E extends Number>")]),t._v(" "),a("td",[t._v("아이템 29")])]),t._v(" "),a("tr",[a("td",[t._v("재귀적 타입 한정")]),t._v(" "),a("td",[t._v("recursive type bound")]),t._v(" "),a("td",[t._v("/<T extends Comparable"),a("T",[t._v(">")])],1),t._v(" "),a("td",[t._v("아이템31")])]),t._v(" "),a("tr",[a("td",[t._v("제네릭 메서드")]),t._v(" "),a("td",[t._v("generic method")]),t._v(" "),a("td",[t._v("static <E> List<E>"),a("br"),t._v("asList(E[] a)")]),t._v(" "),a("td",[t._v("아이템 30")])]),t._v(" "),a("tr",[a("td",[t._v("타입 토큰")]),t._v(" "),a("td",[t._v("type token")]),t._v(" "),a("td",[t._v("String.class")]),t._v(" "),a("td",[t._v("아이템 33")])])])]),t._v(" "),a("h2",{attrs:{id:"로-타입은-사용-하지-말라-2"}},[t._v("로 타입은 사용 하지 말라")]),t._v(" "),a("p",[t._v("로 타입을 쓰면 제네릭이 안겨주는 안정성과 표현력을 모두 잃게 된다. 두 가지 코드를 비교해 보자.")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("로 타입 사용")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stamp 인스턴스만 취급 한다.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),t._v(" stamps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 실수로 동전을 넣는다.")]),t._v("\nstamps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Coin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 런타임에 에러 발생!!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stamps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stamp")]),t._v(" stamp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ClassNotFoundException을 던진다)")]),t._v("\n    stamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("제네릭 사용")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" stamps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 실수로 동전을 넣는다... 컴파일 타임에 에러 발생!!")]),t._v("\nstamps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Coin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("오류는 가능한 한 발생 즉시, 이상적으로는 컴파일할 때 발견하는 것이 좋다."),a("br"),t._v("\n1번에선 오류가 발생 하고 한참 뒤인 런타임에서야 오류를 발견할 수 있는데, 이렇게 되면 런타임에 문제를 겪는 코드와 원인을 제공한 코드가 물리적으로 상당히 떨어져 있을 가능성이 커진다."),a("br"),t._v("\n반면, 2번에선 "),a("code",[t._v("stamps")]),t._v("에 Coin을 넣으려 할때 컴파일 에러가 발생하며, 무엇이 잘못됐는 지 정확히 알 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"list와-list-object"}},[t._v("List와 List<Object>")]),t._v(" "),a("p",[a("code",[t._v("List")]),t._v(" 같은 로타입은 사용해서는 안 되나, "),a("code",[t._v("List<Object>")]),t._v("처럼 임의 객체를 허용하는 매개변수화 타입은 괜찮다. "),a("code",[t._v("List")]),t._v("는 제네릭 타입에서 완전히 발을 뺀 것이고, "),a("code",[t._v("List<Object>")]),t._v("는 모든 타입을 허용한다고 컴파일러에게 명확히 의사전달을 한 것이다. \\")]),t._v(" "),a("blockquote",[a("p",[t._v("제네릭 타입을 쓰고 싶지만 실제 타입 매개변수가 무엇인지 신경쓰고 싶지 않다면 물음표(?)를 사용하자."),a("br"),t._v("\n두 방식의 특징은 와일드카드 타입은 안전하지만 로 타입은 안전하지 않다. 로 타입 컬렉션엔 아무 원소나 넣을 수 있어 타입 불변식을 훼손하기 쉽고, 와일드카드 타입을 사용하면 null 외에는 어떤 원소도 넣을 순 없다."),a("br"),t._v("\n단, class 리터럴에는 로 타입을 써야 한다."),a("br"),t._v("\n단, 로타입이든 비한정적 와일드카드 타입이든 instanceof는 완전히 똑같이 동작하기 때문에 로타입을 쓰는 편이 깔끔하다.(p.159)")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("o\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nx\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);