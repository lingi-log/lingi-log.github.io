(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{202:function(t,n,a){t.exports=a.p+"assets/img/applicationContext_classdiagram.a6623e5f.png"},203:function(t,n,a){t.exports=a.p+"assets/img/applicationContext_classdiagram2.7c2ddf26.png"},204:function(t,n,a){t.exports=a.p+"assets/img/defaultListableBeanFactory_classdiagram.1594ead5.png"},223:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bean의-등록-과정"}},[t._v("Bean의 등록 과정")]),t._v(" "),s("p",[t._v("ApplicationContext 부터 천천히 따라가며 Bean이 어떤 과정을 통해 등록 되는 지 알아보자.")]),t._v(" "),s("h2",{attrs:{id:"applicationcontext"}},[t._v("ApplicationContext")]),t._v(" "),s("p",[s("img",{attrs:{src:a(202),alt:"applicationContext_classdiagram"}})]),t._v(" "),s("p",[t._v("BeanFactory를 상속 받은 HierarchicalBeanFatory, ListaableBeanFactory를 상속 받고 있고, 또한 다른 여러 인터페이스도 상속받고 있다.")]),t._v(" "),s("p",[t._v("ApplicationContext는 Bean을 등록하고 가져오는데 쓰이는 것으로만 생각하고 있었으나, 소스를 열어보니 그렇지 않았다.")]),t._v(" "),s("p",[t._v("실제로 ApplicationContext의 설명을 보면")]),t._v(" "),s("blockquote",[s("p",[t._v("Application의 Component에 접근할 수 있는 BeanFactory 메서드 제공"),s("br"),t._v("\n    - ListableBeanFactory 인터페이스"),s("br"),t._v("\n포괄적인 방식(Generic Fashion)으로 file resource를 읽을 수 있다."),s("br"),t._v("\n    - ResourceLoader 인터페이스"),s("br"),t._v("\n등록 되어 있는 Listener에 event를 publish 할 수 있음"),s("br"),t._v("\n    - ApplicationEventPublisher"),s("br"),t._v("\nmessage를 resolving 할 수 있음. internationalization 지원"),s("br"),t._v("\n    - MessageSource 인터페이스")])]),t._v(" "),s("p",[t._v("이렇게 되어 있다. Spring 프레임워크가 지원하는 기능들이 모여 있는 것을 알 수 있다. 지금은 BeanFactory에 관해 알아보고 있으니 "),s("strong",[t._v("ApplicationContext가 BeanFactory의 기능을 어떤 방식으로 제공하는 지")]),t._v(" 중심으로 알아보자.")]),t._v(" "),s("p",[t._v("ApplicationContext의 구현체를 포함한 클래스다이어그램을 살펴보면(여러 구현체 중 AnnotationConfigApplicationContext만 가져와 보았다.) 앞선 클래스 다이어그램에서 "),s("strong",[t._v("ConfigurableApplicationContext")]),t._v(", "),s("strong",[t._v("AbstractApplicationContext")]),t._v(", "),s("strong",[t._v("AnnotationConfigApplicationContext")]),t._v(" 등등 여러 인터페이스와 클래스가 추가 되어 있는 것을 확인할 수 있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(203),alt:"ds"}})]),t._v(" "),s("h2",{attrs:{id:"bean의-등록은-어디에서"}},[t._v("Bean의 등록은 어디에서?")]),t._v(" "),s("p",[t._v("처음엔 ApplicationContext가 BeanFactory를 상속받고 있으므로 ApplicationContext의 구현체에서 직접 Bean을 등록할 것으로 생각했으나, 소스를 살펴본 결과 그렇지 않았다.")]),t._v(" "),s("p",[s("strong",[t._v("AnnotationConfigApplicationContext")]),t._v("을 살펴보면,")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericApplicationContext")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigRegistry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotatedBeanDefinitionReader")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathBeanDefinitionScanner")]),t._v(" scanner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---------------------------------------------------------------------")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Implementation of AnnotationConfigRegistry")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---------------------------------------------------------------------")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" componentClasses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("componentClasses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"At least one component class must be specified"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("componentClasses"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" basePackages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePackages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"At least one base package must be specified"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scanner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scan")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("basePackages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("AnnotatedBeanDefinitionReader")]),t._v(", "),s("strong",[t._v("ClassPathBeanDefinitionScanner")]),t._v("가 필드로 선언되어 있는데, 각 클래스는 "),s("code",[t._v("register(Class...)")]),t._v(" 메서드와 "),s("code",[t._v("scan(String...)")]),t._v(" 에서 쓰인다.")]),t._v(" "),s("p",[t._v("저 외에 다른 부분을 살펴보아도 "),s("strong",[t._v("AnnotationConfigApplicationContext")]),t._v("에서 직접 Bean을 등록하는 부분은 안보인다. "),s("code",[t._v("class 배열")]),t._v("을 받아 "),s("strong",[t._v("AnnotatedBeanDefinitionReader")]),t._v(" 를 이용해 등록하거나 "),s("code",[t._v("package 경로")]),t._v("를 받아 "),s("strong",[t._v("ClassPathBeanDefinitionScanner")]),t._v(" 를 이용해 경로를 scan 하여 bean을 등록하는 것으로 보인다. 혹시나 조상 클래스에서 구현된 로직이 있나 살펴봤지만")]),t._v(" "),s("h3",{attrs:{id:"genericapplicationcontext-에선"}},[t._v("GenericApplicationContext 에선")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericApplicationContext")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractApplicationContext")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionRegistry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),t._v(" beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericApplicationContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---------------------------------------------------------------------")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Implementation of BeanDefinitionRegistry")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//---------------------------------------------------------------------")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinition")]),t._v(" beanDefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionStoreException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanDefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("registerBeanDefinition")]),t._v("에서 "),s("strong",[t._v("DefaultListableBeanFactory")]),t._v("의 "),s("code",[t._v("registerBeanDefinition")]),t._v(" 메서드를 호출하며 bean 등록하는 역할(?)을 "),s("strong",[t._v("DefaultListableBeanFactory에 위임(?)")]),t._v(" 하고 있었고,")]),t._v(" "),s("h3",{attrs:{id:"abstractapplicationcontext-에서는"}},[t._v("AbstractApplicationContext 에서는")]),t._v(" "),s("p",[t._v("bean을 등록하는 부분이 보이지 않았다.")]),t._v(" "),s("blockquote",[s("p",[t._v("BeanFactory 에서 bean을 등록하는 줄 알았는데 소스를 보면 그게 아닌것 같다. "),s("strong",[t._v("GenericApplicationContext")]),t._v(" 를 보면 "),s("strong",[t._v("BeanDefinitionRegistry")]),t._v("를 구현하고 있는데, 여기서 제공하는 "),s("code",[t._v("registerBeanDefinition")]),t._v("메서드가 bean의 등록을 책임지는것 같다.")])]),t._v(" "),s("p",[t._v("자... 그럼 이제 "),s("strong",[t._v("DefaultListableBeanFactory")]),t._v("에 대해 알아보자")]),t._v(" "),s("h3",{attrs:{id:"defaultlistablebeanfactory"}},[t._v("DefaultListableBeanFactory")]),t._v(" "),s("p",[s("img",{attrs:{src:a(204),alt:"defaultListableBeanFactory"}})]),t._v(" "),s("p",[t._v("지금 까지 알아본 바로, ApplicationContext의 구현체는 BeanDefinitionRegistry 인터페이스를 구현하며, 내부적으로 DefaultListableBeanFactory 클래스에 Bean 등록의 책임을 위임하고 있다.")]),t._v(" "),s("p",[s("strong",[t._v("DefaultListableBeanFactory")]),t._v("를 살펴봤는데, "),s("strong",[t._v("BeanDefinitionRegistry")]),t._v(" 등 여러 인터페이스를 구현하고 있었으며, Bean을 등록하는 데 필요한 모든 기능을 갖춘 유일한 클래스 인것 같다(BeanFactory의 다른 구현체가 있긴 함).")]),t._v(" "),s("p",[t._v("그 중 Bean을등록할 때 사용 되는(BeanDefinitionRegistry의 메서드) "),s("code",[t._v("registerBeanDefinition")]),t._v(" 메서드를 살펴보자.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractAutowireCapableBeanFactory")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionRegistry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanDefinition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinition")]),t._v(" beanDefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionStoreException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinition")]),t._v(" existingDefinition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanDefinitionMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("existingDefinition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////////////////////////////////////////////////")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                     이 부분                      //")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////////////////////////////////////////////////")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanDefinitionMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanDefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("드디어 찾았다. bean의 등록은 "),s("strong",[t._v("DefaultListableBeanFactory")]),t._v(" 클래스의 "),s("code",[t._v("registerBeanDefinition")]),t._v(" 메서드 에서 이루어지고 있었다.")]),t._v(" "),s("h2",{attrs:{id:"정리"}},[t._v("정리")]),t._v(" "),s("p",[t._v("지금 까지 알아본 것을 정리하면")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Bean을 등록하는 책임")]),t._v("은 사실 BeanFactory가 아닌 "),s("strong",[t._v("BeanDefinitionRegistry")]),t._v("가 가지고 있다.")]),t._v(" "),s("li",[t._v("ApplicationContext 인터페이스는 BeanFactory 인터페이스와 BeanDefinitionRegistry 인터페이스를 상속받고 있다.")]),t._v(" "),s("li",[s("strong",[t._v("ApplicationContext 구현체")]),t._v("("),s("strong",[t._v("GenericApplicationContext")]),t._v(")의 "),s("code",[t._v("registerBeanDefinition")]),t._v(" 메서드를 통해 Bean의 등록이 진행되지만")]),t._v(" "),s("li",[t._v("ApplicationContext 의 구현체는 기능을 직접 구현하진 않고")]),t._v(" "),s("li",[t._v("BeanFactory 와 BeanDefinitionRegistry를 구현한 구현체("),s("strong",[t._v("DefaultListableBeanFactory")]),t._v(")에 그 책임을 위임하고 있다.")]),t._v(" "),s("li",[s("strong",[t._v("DefaultListableBeanFactory")]),t._v("는 "),s("code",[t._v("registerBeanDefinition")]),t._v(" 메서드를 통해 Bean을 "),s("strong",[t._v("beanDefinitionMap에 저장")]),t._v("한다.")])])])}),[],!1,null,null,null);n.default=e.exports}}]);